--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=3 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=16 ONE_INPUT_IS_CONSTANT="NO" aclr clken clock dataa datab result
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:09:17:18:41:02:SJ cbx_lpm_add_sub 2014:09:17:18:41:02:SJ cbx_mgl 2014:09:17:20:49:57:SJ cbx_stratix 2014:09:17:18:41:02:SJ cbx_stratixii 2014:09:17:18:41:02:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION cyclonev_lcell_comb (cin, dataa, datab, datac, datad, datae, dataf, datag, sharein)
WITH ( DONT_TOUCH, EXTENDED_LUT, LUT_MASK, SHARED_ARITH)
RETURNS ( combout, cout, shareout, sumout);

--synthesis_resources = lut 54 reg 51 
SUBDESIGN add_sub_8gk
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	dataa[15..0]	:	input;
	datab[15..0]	:	input;
	result[15..0]	:	output;
) 
VARIABLE 
	add_sub_cell_ffa[15..0] : dffe;
	inter_regrs_cin_ffa[2..0] : dffe;
	pad_cell_ffa[31..0] : dffe;
	add_sub_cella[15..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000000FF0000FF00",
			SHARED_ARITH = "off"
		);
	inter_regrs_cina[2..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000AAAA00005555",
			SHARED_ARITH = "off"
		);
	inter_regrs_couta[2..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000055550000AAAA",
			SHARED_ARITH = "off"
		);
	pad_cella[31..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000000FF0000FF00",
			SHARED_ARITH = "off"
		);

BEGIN 
	add_sub_cell_ffa[].clk = clock;
	add_sub_cell_ffa[].clrn = (! aclr);
	add_sub_cell_ffa[].d = add_sub_cella[].sumout;
	add_sub_cell_ffa[].ena = clken;
	inter_regrs_cin_ffa[].clk = clock;
	inter_regrs_cin_ffa[].clrn = (! aclr);
	inter_regrs_cin_ffa[].d = inter_regrs_cina[].sumout;
	inter_regrs_cin_ffa[].ena = clken;
	pad_cell_ffa[].clk = clock;
	pad_cell_ffa[].clrn = (! aclr);
	pad_cell_ffa[].d = pad_cella[].sumout;
	pad_cell_ffa[].ena = clken;
	add_sub_cella[].cin = ( add_sub_cella[14..10].cout, B"0", add_sub_cella[8..5].cout, B"0", add_sub_cella[3..0].cout, B"0");
	add_sub_cella[].datad = dataa[];
	add_sub_cella[].dataf = datab[];
	inter_regrs_cina[].cin = ( pad_cella[9].cout, add_sub_cella[9].cout, add_sub_cella[4].cout);
	inter_regrs_cina[].dataa = B"111";
	inter_regrs_couta[].cin = B"000";
	inter_regrs_couta[].dataa = ( inter_regrs_cin_ffa[2..0].q);
	pad_cella[].cin = ( pad_cella[30..26].cout, inter_regrs_couta[2].cout, pad_cella[24..21].cout, B"0", pad_cella[19..16].cout, B"0", pad_cella[14..10].cout, inter_regrs_couta[1].cout, pad_cella[8..5].cout, inter_regrs_couta[0].cout, pad_cella[3..0].cout, B"0");
	pad_cella[].datad = ( pad_cell_ffa[15..0].q, add_sub_cell_ffa[].q);
	pad_cella[].dataf = B"00000000000000000000000000000000";
	result[15..0] = pad_cell_ffa[31..16].q;
END;
--VALID FILE
