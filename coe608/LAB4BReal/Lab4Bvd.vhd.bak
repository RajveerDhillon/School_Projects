LIBRARY ieee; 
USE ieee.std_logic_1164.ALL; 
USE ieee.std_logic_arith.ALL; 
USE ieee.std_logic_unsigned.ALL; 

ENTITY lab4Bvd IS
PORT( Clk, mClk :				IN STD_LOGIC;  --clock Signal 

  --Memory Signals 
  WEN, EN :    			IN STD_LOGIC; 

  -- Register Control Signals (CLR and LD). 
	Clr_A , Ld_A :    	IN STD_LOGIC; 
	Clr_B , Ld_B :    	IN STD_LOGIC; 
	Clr_C , Ld_C :    	IN STD_LOGIC; 
	Clr_Z , Ld_Z :    	IN STD_LOGIC; 
	Clr_PC , Ld_PC :     IN STD_LOGIC; 
	Clr_IR , Ld_IR :     IN STD_LOGIC; 
	
	-- Register outputs (Some needed to feed back to control unit. Others pulled out for testing. 
	Out_A :       OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 
	Out_B : 		  OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 
	Out_C :       OUT STD_LOGIC; 
	Out_Z :		  OUT STD_LOGIC; 
	Out_PC :      OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 
	Out_IR :      OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 

	-- Special inputs to PC. 
	Inc_PC :      	IN STD_LOGIC; 
	
	-- Address and Data Bus signals for debugging. 
	ADDR_OUT :     						OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 
	DATA_IN  :     						IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
	DATA_OUT, MEM_OUT, MEM_IN :      OUT STD_LOGIC_VECTOR(31 DOWNTO 0); 
	MEM_ADDR :       						OUT STD_LOGIC_VECTOR(7 DOWNTO 0); 

	-- Various MUX controls. 
	DATA_Mux:   IN STD_LOGIC_VECTOR(1 DOWNTO 0); 
	REG_Mux :    IN STD_LOGIC; 
	A_MUX, B_MUX :   IN STD_LOGIC; 
	IM_MUX1 :    IN STD_LOGIC; 
	IM_MUX2 :    IN STD_LOGIC_VECTOR(1 DOWNTO 0); 

 
	-- ALU Operations. 
	ALU_Op :     							IN STD_LOGIC_VECTOR(2 DOWNTO 0)); 
END Lab4Bvd;
-------------------------------------------------------------------------
ARCHITECTURE description OF Lab4Bvd IS

-- COMPENENT INST

COMPONENT 